name: Build and Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ "ci" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "ci" ]

env:
  REGISTRY: ghcr.io

jobs:

  # This workflow contains a single job called "build"
  build-web:
    environment: production
    env:
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}/datamed-web

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3
        env:
          NEXT_PUBLIC_PROD_WEB_ROOT: ${{ secrets.NEXT_PUBLIC_PROD_WEB_ROOT }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Test printing your secret (Remove this step in production)
        run: echo $NEXT_PUBLIC_PROD_WEB_ROOT

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: dist
          secrets: |
            "DATABASE_URL=${{ secrets.DATABASE_URL }}"
            "NEXT_PUBLIC_PROD_WEB_ROOT=${{ secrets.NEXT_PUBLIC_PROD_WEB_ROOT }}"
            NEXT_PUBLIC_TEST=test

      - name: Log in to GitHub Container Repository
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
