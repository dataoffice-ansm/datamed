# Definition
directive @uppercase on FIELD_DEFINITION
directive @lowercase on FIELD_DEFINITION
directive @capitalize on FIELD_DEFINITION

type GenderRepartition {
    male: Int
    female: Int
}

type RepartitionTuple {
    codePart: String
    value: Int
}

type MedicalError {
    name: String
}

type MedicalATC {
    id: Int!
    code: String
    name: String
}

type Laboratory {
    id: Int!
    name: String
}

type Speciality {
    id: Int!
    cisId: String!
    name: String!
    atc: MedicalATC
    iconId: Int
    icon: Icon
    substances: [Substance]
    description: String
    #genderRepartition:GenderRepartition
    commercialisationState: String @capitalize
    commercialisationType: String @capitalize
    laboratory: Laboratory
    #ageRepartition: RepartitionTuple[];
    #medicalErrors: MedicalError[];
    #pharmacoForm: String;
    #autorizationNumber: String;
    #ammStatus: String;
    #ammDate: Date;
    #ammType: String;
    #bdpmStatus: String;
    #surveillance_renforcee: String;
    #titulaires: String;
    #administeringMode: String;
}

type Substance {
    id: Int!
    code: String!
    name: String!
    pharmaForm: String
    dosage: String
}

type Icon {
    id: Int!
    name: String
}

type Meta {
    count: Int
}

##### QUERIES #####

type SpecialitiesReturn {
    specialities: [Speciality]
    meta: Meta
}

type SubstancesReturn {
    substances: [Substance]
    meta: Meta
}

type Query {
    getSpeciality(cisCode: String!): Speciality
    getSpecialities: SpecialitiesReturn
    getSubstance(subCode: String!): Substance
    getSubstances: SubstancesReturn
}

#type Mutation {
#    addBook(title: String, author: String): AddBookMutationResponse
#}